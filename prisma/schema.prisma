generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["driverAdapters"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model Expense {
  id        String   @id @default(uuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  title     String   @db.VarChar(255)
  amount    Int
}


// prisma/schema.prisma
model TelegramUser {
  id          String    @id @default(cuid()) 
  chatId     String     @unique
  username   String?
  user  User ?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt @default(now()) 
}


model User {
  id          String   @id @default(cuid())
  name        String
  phone        Int     @unique
  secreateKey  Int     @unique
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")
  status      Status[] // One-to-many relationship with Status
  issues      Issue[]  // One-to-many relationship with Issue
    telegramUser TelegramUser? @relation(fields: [TelegramUserId], references: [id])
  TelegramUserId String?   @unique
}

model Issue {
  id          String   @id @default(cuid())
  description String
  status      IssueStatus 
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt
  userId      String        // Foreign key to the User
  user        User        @relation(fields: [userId], references: [id])
}
 
model Status {
   id          String   @id @default(cuid())
  sensorId    Int      
  status      UserStatus   @default(STOP) // Enum to define user status
  acknowledgment String?   // A message or notes for acknowledgment
  createdAt   DateTime     @default(now())
  userId      String          // Foreign key to the User
  user        User         @relation(fields: [userId], references: [id])
}

enum IssueStatus {
  STOP
  SLOW
}

enum UserStatus {
  STOP
  WORKING
  IDLE
  ON_LEAVE
}